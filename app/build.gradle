//file:noinspection DependencyNotationArgument
//file:noinspection ConfigurationAvoidance
import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id 'app.cash.licensee'
    id 'app.cash.paparazzi'
    id 'com.android.application'
    id 'com.google.devtools.ksp'
    id 'kotlin-parcelize'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.kotlin.plugin.compose'
    id 'org.jmailen.kotlinter'
}

android {
    compileSdk 35

    defaultConfig {
        applicationId "ca.amandeep.path"
        minSdk 29
        targetSdk 34
        versionCode 4
        versionName "1.3"

        vectorDrawables {
            useSupportLibrary true
        }
        signingConfig signingConfigs.debug
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    kotlin {
        jvmToolchain(11)
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '11'
        freeCompilerArgs += "-opt-in=kotlin.RequiresOptIn"
        freeCompilerArgs += "-P"
        //noinspection GrDeprecatedAPIUsage
        freeCompilerArgs += "plugin:androidx.compose.compiler.plugins.kotlin:metricsDestination=" + project.buildDir.absolutePath + "/compose_compiler"
        freeCompilerArgs += "-P"
        //noinspection GrDeprecatedAPIUsage
        freeCompilerArgs += "plugin:androidx.compose.compiler.plugins.kotlin:reportsDestination=" + project.buildDir.absolutePath + "/compose_compiler"
    }

    buildFeatures {
        compose true
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    testOptions {
        unitTests.includeAndroidResources = true
    }
    namespace 'ca.amandeep.path'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

java {
    sourceCompatibility JavaVersion.VERSION_17
    targetCompatibility JavaVersion.VERSION_17
}

tasks.withType(KotlinCompile) {
    //noinspection GrDeprecatedAPIUsage
    kotlinOptions {
        jvmTarget = '17'
    }
}

dependencies {
    implementation AndroidX.activity.compose
    implementation AndroidX.compose.material
    implementation AndroidX.compose.material.icons.extended
    implementation AndroidX.compose.material3
    implementation AndroidX.compose.material3.windowSizeClass
    implementation AndroidX.compose.ui
    implementation AndroidX.core.ktx
    implementation AndroidX.core.splashscreen
    implementation AndroidX.lifecycle.runtime.compose
    implementation AndroidX.lifecycle.runtime.ktx
    implementation AndroidX.lifecycle.viewModelKtx
    implementation AndroidX.navigation.compose
    implementation KotlinX.collections.immutable

    //noinspection GradleDependency breaking permissions changes, TODO handle them
    implementation Google.accompanist.permissions
    implementation Google.android.playServices.location

    implementation Square.moshi.adapters
    implementation Square.moshi
    ksp Square.moshi.kotlinCodegen
    implementation Square.retrofit2.converter.moshi
    implementation Square.retrofit2

    implementation "dev.burnoo:compose-remember-preference:_"
    implementation "org.jsoup:jsoup:_"

    implementation 'com.github.ajalt:timberkt:_'
    implementation JakeWharton.timber

    implementation AndroidX.compose.ui.tooling
    debugImplementation AndroidX.compose.ui.toolingPreview

    testImplementation(Testing.junit4)
    testImplementation "com.google.truth:truth:_"
    testImplementation "com.google.truth.extensions:truth-java8-extension:_"
}

licensee {
    allow 'Apache-2.0'
    allowUrl('https://developer.android.com/studio/terms.html') {
        because 'Android Software Development Kit License Agreement'
    }
    allowUrl('https://jsoup.org/license') {
        because 'MIT, but self-hosted copy of the license'
    }
}

tasks.withType(Test) {
    android.sourceSets.main.res.srcDirs += 'src/test/res'
}
